#include <queue>
#include <vector>
#include <string>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#define MAXN 10010
using namespace std;
int n, m;
int w[MAXN], v[MAXN];
int dp[MAXN][MAXN];
int Solve(int cnt, int v0);
int main() {
	while (scanf("%d%d", &n, &m) != EOF) {
		memset(dp, -1, sizeof(dp));
		for (int i = 0; i < n; i++) {
			scanf("%d%d", &w[i], &v[i]);
		}
		printf("%d\n", Solve(0, m));
	}
	return 0;
}

int Solve(int i, int j) {
	if (dp[i][j] >= 0) {
		return dp[i][j];
	}
	int res;
	if (i == n) {
		res = 0;
	}
	else if (j < w[i]) {
		res = Solve(i + 1, j);
	}
	else {
		res = max(Solve(i + 1, j), Solve(i + 1, j - w[i]) + v[i]);
	}
	return dp[i][j] = res;
}

