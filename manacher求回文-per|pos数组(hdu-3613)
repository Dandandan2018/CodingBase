#include <string>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#define MAXN 500010
#define INF 0x3f3f3f3f
using namespace std;
int n;
int val[30];
char str[MAXN], s[MAXN << 1];
int p[MAXN << 1];
int per[MAXN], pos[MAXN], sum[MAXN];
void init(int len);
void manacher();
int main() {
	int runs = 1;
	while (scanf("%d", &runs) != EOF) {
		for (int run = 1; run <= runs; run++) {
			memset(per, 0, sizeof(per));
			memset(pos, 0, sizeof(pos));
			for (int i = 0; i < 26; i++) {
				scanf("%d", &val[i]);
			}
			scanf("%s", str);
			int len = strlen(str);
			sum[0] = val[str[0] - 'a'];
			for (int i = 1; i < len; i++) {
				sum[i] = sum[i - 1] + val[str[i] - 'a'];
			}
			init(len);
			manacher();
			//这里val可能是负值, maxn开始 设置为 1WA了好久 
			int maxn = -INF, temp;
			for (int i = 0; i < len - 1; i++) {
				temp = (per[i + 1] == 1) ? sum[i] : 0;
				temp = (pos[len - (i + 1)] == 1) ? temp + sum[len - 1] - sum[i] : 0;
				maxn = max(temp, maxn);
			}
			printf("%d\n", maxn);
		}
	}
	return 0;
}

void init(int len) {
	s[0] = '$';
	s[1] = '#';
	n = 2;
	for (int i = 0; i < len; i++) {
		s[n++] = str[i];
		s[n++] = '#';
	}
	s[n] = '\0';
}

void manacher() {
	int mx = 0, id = 0, maxn = 0;
	memset(p, 0, sizeof(p));
	for (int i = 2; s[i]; i++) {
		p[i] = mx > i ? min(p[2 * id - i], mx - i) : 1;
		while (s[i - p[i]] == s[i + p[i]]) {
			p[i]++;
		}
		if (i + p[i] > mx) {
			mx = i + p[i];
			id = i;
		}
		maxn = max(maxn, p[i]);
		if (i == p[i]) {
			per[p[i] - 1] = 1;
		}
		if (i + p[i] == n) {
			pos[p[i] - 1] = 1;
		}
	}
}
